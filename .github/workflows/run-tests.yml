name: Run tests and Build Docker

on:
  push:
    paths:
      - "src/**"
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: nbank-autotests
  DOCKER_REGISTRY: docker.io

jobs:
  run-tests:
    name: Set up services and run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project
        run: ./mvnw clean compile -q

      - name: Run Checkstyle
        run: ./mvnw checkstyle:check -q

      - name: Set up services
        run: cd infra/docker_compose && bash restart_docker.sh && cd ../..

      - name: Run tests
        run: ./mvnw test -q
        env:
          APIBASEURL: http://localhost:4111
          UIBASEURL: http://frontend

  build-and-push-docker:
    needs: run-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get commit hash
        id: commit-hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.commit-hash.outputs.hash }}
            ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max