name: Run tests

# триггер
on: [ push, workflow_dispatch ]

jobs: # аналог этапов
  run-tests:
    name: Set up services (review apps) and run tests
    runs-on: ubuntu-latest
    steps: # шаги конкретной job
      - name: Checkout repository # копируем файлы репозитория внутрь CI агента
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up services
        run: cd infra/docker_compose && bash restart_docker.sh && cd ../..

      - name: Wait for services to be ready
        run: |
          echo "Waiting for Selenoid..."
          timeout 60s bash -c 'until curl -s http://localhost:4444/status | jq -e ".value.ready == true"; do echo "Selenoid not ready yet..."; sleep 2; done'
          echo "Selenoid is ready! Starting tests."

      - name: Set up services and show logs
        run: |
            cd infra/docker_compose
            bash restart_docker.sh
            sleep 5 
            echo "--- Selenoid initial logs ---"
            docker logs selenoid
            cd ../..

      - name: Wait for services to be ready
        run: |
          echo "Waiting for Selenoid..."
          timeout 60s bash -c 'until curl -s http://localhost:4444/status | jq -e ".value.ready == true"; do echo "Selenoid not ready yet..."; sleep 2; done'
          echo "Selenoid is ready! Starting tests."

      - name: Run tests
        run: >
          ./mvnw clean test -q
          -Dselenide.baseUrl=${UIBASEURL}
          -Dselenide.remote=${UIREMOTE}
        env:
          UIBASEURL: http://frontend
          UIREMOTE: http://localhost:4444/wd/hub
          APIBASEURL: http://localhost:4111

      - name: Display Docker logs for debugging
        if: failure()
        run: |
            echo "--- Docker PS ---"
            docker ps -a
            echo "--- Selenoid Logs ---"
            docker logs selenoid --tail 200
            echo "--- Frontend Logs ---"
            docker logs frontend --tail 200