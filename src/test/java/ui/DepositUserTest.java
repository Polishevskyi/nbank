package ui;

import com.codeborne.selenide.Configuration;
import com.codeborne.selenide.Selectors;
import com.codeborne.selenide.Selenide;
import extensions.UserExtension;
import models.*;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.openqa.selenium.Alert;
import requests.skelethon.Endpoint;
import requests.skelethon.requesters.CrudRequester;
import requests.steps.UserSteps;
import specs.RequestSpecs;
import specs.ResponseSpecs;

import java.util.Map;

import static com.codeborne.selenide.Condition.selected;
import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.*;
import static org.assertj.core.api.Assertions.assertThat;

@ExtendWith(UserExtension.class)
public class DepositUserTest {
    @BeforeAll
    public static void setupSelenoid() {
        Configuration.remote = "http://localhost:4444/wd/hub";
        Configuration.baseUrl = "http://192.168.0.106:3000";
        Configuration.browser = "chrome";
        Configuration.browserSize = "1920x1080";

        Configuration.browserCapabilities.setCapability("selenoid:options",
                Map.of("enableVNC", true, "enableLog", true));
    }

    @Test
    @DisplayName("User can add deposit with correct data via UI and then via API")
    public void userCanAddDepositWithCorrectDataTest(CreateUserRequestModel userRequest, Long userId) {
        // –®–ê–ì–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
        // –®–ê–ì 1: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–æ–∑–¥–∞–Ω –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ UserExtension
        // –®–ê–ì 2: –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        // –®–ê–ì 3: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–æ–≥–∏–Ω–∏—Ç—Å—è –≤ –±–∞–Ω–∫–µ

        String userAuthHeader = new CrudRequester(
                RequestSpecs.unAuthSpec(),
                Endpoint.LOGIN,
                ResponseSpecs.requestReturnsOKSpec())
                .post(LoginUserRequestModel.builder().username(userRequest.getUsername())
                        .password(userRequest.getPassword()).build())
                .extract()
                .header("Authorization");

        // –®–ê–ì 4: —Å–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç —á–µ—Ä–µ–∑ API, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω –≤ UI
        AccountsResponseModel accountsResponse = UserSteps.createAccountAndGetResponse(userRequest.getUsername(),
                userRequest.getPassword());

        Selenide.open("/");

        executeJavaScript("localStorage.setItem('authToken', arguments[0]);", userAuthHeader);

        Selenide.open("/dashboard");

        // –®–ê–ì–ò –¢–ï–°–¢–ê
        // –®–ê–ì 5: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–µ–ø–æ–∑–∏—Ç–∞ –∏ –≤–Ω–æ—Å–∏—Ç –¥–µ–Ω—å–≥–∏ —á–µ—Ä–µ–∑ UI (–ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç)
        $(Selectors.byText("üí∞ Deposit Money")).click();
        $(Selectors.byCssSelector(".form-control.account-selector")).shouldBe(visible);
        $(Selectors.byCssSelector(
                String.format(".form-control.account-selector option[value='%s']", accountsResponse.getId())))
                .shouldBe(visible); // –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ–ø—Ü–∏–∏
        $(Selectors.byCssSelector(".form-control.account-selector"))
                .selectOptionByValue(String.valueOf(accountsResponse.getId())); // –í—ã–±–∏—Ä–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç –ø–æ ID
        $(Selectors.byCssSelector(
                String.format(".form-control.account-selector option[value='%s']", accountsResponse.getId())))
                .shouldBe(selected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–ø—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–∞
        $(Selectors.byCssSelector(".form-control[placeholder='Enter amount']")).setValue(String.valueOf(2000.0F));
        $(Selectors.byText("üíµ Deposit")).click();

        // –®–ê–ì 6: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–µ–ø–æ–∑–∏—Ç —á–µ—Ä–µ–∑ UI –±—ã–ª —É—Å–ø–µ—à–Ω—ã–º, –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ø–∞–ø
        Alert depositAlert = switchTo().alert();
        assertThat(depositAlert.getText()).contains("Successfully deposited");
        depositAlert.accept();

        // –®–ê–ì 7: –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Ç–æ—Ä–æ–π –¥–µ–ø–æ–∑–∏—Ç —á–µ—Ä–µ–∑ API –Ω–∞ —Ç–æ—Ç –∂–µ —Å—á–µ—Ç
        float apiDepositAmount = 2000.0F;
        DepositRequestModel apiDepositRequest = DepositRequestModel.builder()
                .id(accountsResponse.getId())
                .balance(apiDepositAmount)
                .build();

        DepositResponseModel apiDepositResponse = UserSteps.deposit(userRequest.getUsername(),
                userRequest.getPassword(), apiDepositRequest);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ API-–¥–µ–ø–æ–∑–∏—Ç–∞ —Ä–∞–≤–µ–Ω —Å—É–º–º–µ UI –∏ API –¥–µ–ø–æ–∑–∏—Ç–æ–≤
        assertThat(apiDepositResponse.getBalance()).isEqualTo(2000.0F + apiDepositAmount);
    }
}
