package ui;

import com.codeborne.selenide.Configuration;
import extensions.UserExtension;
import models.AccountsResponseModel;
import models.CreateUserRequestModel;
import models.DepositRequestModel;
import models.LoginUserRequestModel;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import requests.skelethon.Endpoint;
import requests.skelethon.requesters.CrudRequester;
import requests.steps.UserSteps;
import specs.RequestSpecs;
import specs.ResponseSpecs;

import java.util.Map;

import static com.codeborne.selenide.Selectors.byText;
import static com.codeborne.selenide.Selenide.*;
import static org.assertj.core.api.Assertions.assertThat;

@ExtendWith(UserExtension.class)
public class TransferMoneyUserTest {
    private static final float INITIAL_DEPOSIT = 1000.0f;
    private static final float TRANSFER_AMOUNT = 500.0f;

    @BeforeAll
    public static void setupSelenoid() {
        Configuration.remote = "http://localhost:4444/wd/hub";
        Configuration.baseUrl = "http://192.168.0.106:3000";
        Configuration.browser = "chrome";
        Configuration.browserSize = "1920x1080";

        Configuration.browserCapabilities.setCapability("selenoid:options",
                Map.of("enableVNC", true, "enableLog", true));
    }

    @Test
    @DisplayName("User can transfer money with correct data")
    public void userCanTransferMoneyWithCorrectDataTest(CreateUserRequestModel userRequest, Long userId) {
        // –®–ê–ì–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
        // –®–ê–ì 1: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–æ–∑–¥–∞–Ω –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ UserExtension
        // –®–ê–ì 2: —Å–æ–∑–¥–∞–µ–º –∏—Å—Ö–æ–¥—è—â–∏–π —Å—á–µ—Ç —á–µ—Ä–µ–∑ API
        AccountsResponseModel sourceAccount = UserSteps.createAccountAndGetResponse(userRequest.getUsername(),
                userRequest.getPassword());

        // –®–ê–ì 3: —Å–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤–æ–π —Å—á–µ—Ç (–¥–ª—è —Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) —á–µ—Ä–µ–∑ API
        AccountsResponseModel targetAccount = UserSteps.createAccountAndGetResponse(userRequest.getUsername(),
                userRequest.getPassword());

        // –®–ê–ì 4: –≤–Ω–æ—Å–∏–º –Ω–∞—á–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ –∏—Å—Ö–æ–¥—è—â–∏–π —Å—á–µ—Ç —á–µ—Ä–µ–∑ API
        DepositRequestModel depositRequest = DepositRequestModel.builder()
                .id(sourceAccount.getId())
                .balance(INITIAL_DEPOSIT)
                .build();

        UserSteps.deposit(userRequest.getUsername(), userRequest.getPassword(), depositRequest);

        // –®–ê–ì 5: –ø–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è UI
        String userAuthHeader = new CrudRequester(
                RequestSpecs.unAuthSpec(),
                Endpoint.LOGIN,
                ResponseSpecs.requestReturnsOKSpec())
                .post(LoginUserRequestModel.builder().username(userRequest.getUsername())
                        .password(userRequest.getPassword()).build())
                .extract()
                .header("Authorization");

        // –®–ê–ì 6: –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π URL –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ localStorage
        open("/");
        executeJavaScript("localStorage.setItem('authToken', arguments[0]);", userAuthHeader);

        // –®–ê–ì 7: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–∞—à–±–æ—Ä–¥–∞
        open("/dashboard");

        // –®–ê–ì–ò –¢–ï–°–¢–ê
        // –®–ê–ì 8: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–µ—Ä–µ–≤–æ–¥–∞
        $(byText("üîÑ Make a Transfer")).click();

        // –®–ê–ì 9: –≤—ã–±–∏—Ä–∞–µ–º –∏—Å—Ö–æ–¥—è—â–∏–π —Å—á–µ—Ç –≤ UI
        $(By.cssSelector("select.form-control.account-selector"))
                .selectOptionByValue(sourceAccount.getId().toString());

        // –®–ê–ì 10: –≤–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è (—Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        $(By.cssSelector("input[placeholder=\"Enter recipient name\"]"))
                .setValue(userRequest.getUsername());

        // –®–ê–ì 11: –≤–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è (–≤—Ç–æ—Ä–æ–≥–æ —Å—á–µ—Ç–∞ —Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        $(By.cssSelector("input[placeholder=\"Enter recipient account number\"]"))
                .setValue(targetAccount.getAccountNumber());

        // –®–ê–ì 12: –≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        $(By.cssSelector("input[placeholder=\"Enter amount\"]")).setValue(String.valueOf(TRANSFER_AMOUNT));

        // –®–ê–ì 13: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–µ—Ç–∞–ª–µ–π
        $("#confirmCheck").click();

        // –®–ê–ì 14: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
        $(byText("üöÄ Send Transfer")).click();

        // –®–ê–ì 15: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–µ—Ä–µ–≤–æ–¥–µ —á–µ—Ä–µ–∑ UI
        Alert transferAlert = switchTo().alert();
        assertThat(transferAlert.getText()).contains("Successfully transferred");
        transferAlert.accept();

        // –®–ê–ì 16: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞ –±—ç–∫–µ–Ω–¥–µ —á–µ—Ä–µ–∑ API
        UserSteps.verifyTransferTransactions(userRequest.getUsername(), userRequest.getPassword(),
                sourceAccount.getId(), INITIAL_DEPOSIT, TRANSFER_AMOUNT);
    }
}
